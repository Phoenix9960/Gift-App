{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifts","GifExpertApp","categories","App","ReactDOM","render","document","getElementById"],"mappings":"8MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,aAsB/BZ,EAAYe,WAAa,CACrBd,cAAee,IAAUC,KAAKC,Y,mCC9BrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEJ,mCACTC,EAHa,iDAGoCC,UAAUH,GAH9C,6BAEJ,oCAFI,SAKAI,MAAMF,GALN,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJyB,SAAEA,GAE3B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAY,WACRC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAACpB,IAEGqB,EDhBuBQ,CAAc7B,GAAhCa,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,qCACI,6BAAKpB,IACHoB,GAAW,4CACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAIC,aESlBmB,EAtBM,WAEjB,MAAoChD,mBAAU,CAAC,gBAA/C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAEA,OACI,qCACI,+CACA,uBAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEQkD,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCPvBgC,EARH,WACR,OACI,8BACI,cAAC,EAAD,OCDZC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.943a6044.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInput = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats] )\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInput }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","\r\nexport const getGift = async (category) => {\r\n\r\n    const apiKey = 'ioA8l1V78DiYDr7xBCQGxyY7iJaDFfbD';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${apiKey}`\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className='card'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs';\r\n// import { getGift } from '../helpers/GetGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images,loading} = useFetchGifts(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p>cargando...</p>}\r\n            <div className='card-Grid'>\r\n                {\r\n                    images.map( img => {\r\n                        return <GifGridItem \r\n                        key={img.id}\r\n                        {...img} \r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGift } from \"../helpers/GetGifs\"\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() =>{\r\n        getGift( category )\r\n            .then( imgs => {\r\n                setTimeout( () => {\r\n                    console.log(imgs)\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 3000 )\r\n            })\r\n    }, [category])\r\n\r\n    return state\r\n\r\n}","import React, { useState } from 'react'\r\nimport {AddCategory} from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['Dragon Ball'] )\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <ul>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react'\r\nimport GifExpertApp from './components/GifExpertApp';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <GifExpertApp />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}